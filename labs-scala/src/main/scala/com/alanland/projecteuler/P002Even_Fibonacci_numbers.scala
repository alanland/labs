package com.alanland.projecteuler

/**
  * Even Fibonacci numbers
  *
  * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  *
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  *
  * @author 王成义
  * @version 9/29/16
  */
object P002Even_Fibonacci_numbers extends App {
  val max = 4000000

  val fib: Stream[Long] = {
    def tail(h: Long, n: Long): Stream[Long] = h #:: tail(n, h + n)
    tail(1, 2)
  }

  val list = fib.takeWhile(_ < max).toList.filter(_ % 2 == 0)
  println(list.mkString(" "))
  println(list.sum)

}
